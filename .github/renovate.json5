{
  baseBranches: [
    "main",
    "/^release\\/.*/",
  ],
  enabledManagers: [
    "custom.regex",
    "github-actions",
  ],
  customManagers: [
    {
      depNameTemplate: "Alpine",
      fileMatch: ["^Dockerfile$"],
      matchStrings: ["ARG ALPINE_VERSION=(?<currentValue>.*?)\\n"],
      datasourceTemplate: "docker",
      packageNameTemplate: "alpine",
    },
    {
      depNameTemplate: "Crypto++",
      fileMatch: ["^Dockerfile$"],
      matchStrings: ["ARG CRYPTOPP_VERSION=(?<currentValue>.*?)\\n"],
      datasourceTemplate: "github-releases",
      packageNameTemplate: "weidai11/cryptopp",
    },
    {
      depNameTemplate: "Go",
      fileMatch: ["^Dockerfile$"],
      matchStrings: ["ARG GO_VERSION=(?<currentValue>.*?)\\n"],
      datasourceTemplate: "docker",
      packageNameTemplate: "golang",
    },
    {
      depNameTemplate: "MEGAcmd",
      fileMatch: ["^Dockerfile$"],
      matchStrings: ["ARG MEGA_CMD_VERSION=(?<currentValue>.*?)\\n"],
      datasourceTemplate: "github-releases",
      packageNameTemplate: "meganz/MEGAcmd"
    },
    {
      depNameTemplate: "MEGA SDK",
      fileMatch: ["^Dockerfile$"],
      matchStrings: ["ARG MEGA_SDK_VERSION=(?<currentValue>.*?)\\n"],
      datasourceTemplate: "github-releases",
      packageNameTemplate: "meganz/sdk"
    },
    {
      depNameTemplate: "Rclone",
      fileMatch: ["^Dockerfile$"],
      matchStrings: ["ARG RCLONE_VERSION=(?<currentValue>.*?)\\n"],
      datasourceTemplate: "docker",
      packageNameTemplate: "rclone/rclone"
    },
    {
      depNameTemplate: "webdavfs",
      fileMatch: ["^Dockerfile$"],
      matchStrings: ["ARG WEBDAVFS_VERSION=(?<currentDigest>.*?)\\n"],
      datasourceTemplate: "git-refs",
      packageNameTemplate: "https://github.com/searxng/searxng",
      currentValueTemplate: "master",
      versioningTemplate: "git"
    }
  ],
  packageRules: [
    {
      description: "Disable grouping for all dependencies",
      matchPackagePatterns: [".*"],
      groupName: null
    },
    {
      description: "Custom versioning for Crypto++",
      matchPackageNames: ["weidai11/cryptopp"],
      extractVersion: "^CRYPTOPP_(?<version>.*)$",
      versioning: "regex:^(?<major>\\d+)_(?<minor>\\d+)_(?<patch>\\d+)$",
    },
    {
      description: "Custom versioning for MEGAcmd",
      matchPackageNames: ["meganz/MEGAcmd"],
      extractVersion: "^v(?<version>.*)$"
    },
    {
      description: "Custom versioning for MEGA SDK",
      matchPackageNames: ["meganz/sdk"],
      extractVersion: "^v(?<version>.*)$"
    },
  ],
}
