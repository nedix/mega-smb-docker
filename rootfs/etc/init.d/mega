#!/sbin/openrc-run

extra_commands="healthcheck"

export SANDBOX_NAME="$RC_SVCNAME"
export SANDBOX_NUMBER="${RC_SVCNAME##*-}"
export SANDBOX_PATH="/home/${SANDBOX_NAME}"

depend() {
    need nftables
    before rclone
}

start_pre() {
    /opt/mega-smb/sandbox setup_chroot
    /opt/mega-smb/sandbox setup_network

    mkdir -p \
        "/home/mega-smb/webdavfs/${SANDBOX_NAME}"

    chown -R mega-smb:mega-smb \
        "/home/mega-smb/webdavfs/${SANDBOX_NAME}"

    for BIN in \
        /bin/sh \
        /usr/bin/mega-* \
    ; do
        DIR="${SANDBOX_PATH}${BIN%/*}"
        mkdir -p "$DIR"
        cp "$BIN" "$DIR"
    done

    for LIB in \
        $(ldd /usr/bin/mega-cmd-server | awk '/=>/ {print $3}') \
    ; do
        DIR="${SANDBOX_PATH}${LIB%/*}"
        mkdir -p "$DIR"
        cp "$LIB" "$DIR"
    done

    . /etc/mega/.env

    # Set up routing tables
    ip netns exec "$SANDBOX_NAME" nft add table inet filter
    ip netns exec "$SANDBOX_NAME" nft add chain inet filter input "{ type filter hook input priority 0; policy accept; }"
    ip netns exec "$SANDBOX_NAME" nft add chain inet filter output "{ type filter hook output priority 0; policy accept; }"

    # Accept service traffic
    ip netns exec "$SANDBOX_NAME" nft add rule inet filter input tcp dport 10000 accept
    ip netns exec "$SANDBOX_NAME" nft add rule inet filter output tcp sport 10000 accept

    # Throttle incoming connections that exceed the stream limit
    ip netns exec "$SANDBOX_NAME" nft add rule inet filter input \
        meter active_streams "{ ip daddr . tcp dport timeout 1s limit rate over 1 bytes/second burst 0 bytes }" \
        meter max_streams "{ ip daddr . tcp dport ct count over ${STREAM_LIMIT} }" \
        reject with tcp reset

    # Throttle outgoing connections that exceed the transfer limit
    ip netns exec "$SANDBOX_NAME" nft add rule inet filter output \
        meter active_transfers "{ ip saddr . tcp sport timeout 1s limit rate over 1 bytes/second burst 0 bytes }" \
        meter max_transfers "{ ip saddr . tcp sport ct count over ${TRANSFER_LIMIT} }" \
        reject with tcp reset
}

start() {
    ebegin "Starting ${RC_SVCNAME}"

    . /etc/mega/.env

    /opt/mega-smb/sandbox /usr/bin/mega-login "$EMAIL" "$PASSWORD"

    ENDPOINT=$(
        /opt/mega-smb/sandbox /usr/bin/mega-webdav --port="10000" --public "$DIRECTORY" \
        | awk '{print $NF}' \
        | sed "s|127.0.0.1|10.0.${SANDBOX_NUMBER}.0|"
    )

    mount \
        -t webdavfs \
        -o allow_other \
        "$ENDPOINT" \
        "/home/mega-smb/webdavfs/${SANDBOX_NAME}"

    healthcheck && eend 0 || (stop; eend 1)
}

stop() {
    ebegin "Stopping ${RC_SVCNAME}"

    umount "/home/mega-smb/webdavfs/${SANDBOX_NAME}"

    /opt/mega-smb/sandbox /usr/bin/mega-webdav -d --all

    eend $?
}

status() {
    healthcheck && eend 0 || eend 1
}

healthcheck() {
    mount | grep -q "/home/mega-smb/webdavfs/${SANDBOX_NAME}"
}
